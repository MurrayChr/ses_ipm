#' tLTRE analysis from ipm estimates fit with the iterative two-stage procedure
#' tLTRE contributions computed using get_tltre_contribution() function
library(cmdstanr)
library(posterior)
library(tidyverse)
source("R/10_get_tltre_contribution_function.R")
# the model could be fitted to real data, e.g.
file <- "pop_01_hmm_04_fit.RDS"
# read in fitted model
fit <-readRDS( str_c( "outputs/", file ) )
# parameters needed for tltre
vr_pars <- c("s0", "sN", "sB", "sW")       # survival probabilities
pop_pars <- c("pNb", "pPb", "In", "Tot")   # pop stage-class proportions
ltre_pars <- c(vr_pars, pop_pars)
# posterior samples
posterior <- fit$draws( variables = ltre_pars, format = "df" ) %>%
select( !starts_with(".") )
n_draws <- nrow(posterior)
# create list of draws x time matrices for each variable
posterior_list <- list()
for (par in ltre_pars){
par_cols_bool <- str_detect( colnames(posterior), par)
par_cols <- colnames(posterior)[par_cols_bool]
posterior_list[[par]] <- posterior %>%
select( all_of(par_cols) ) %>%
as.matrix()
}
# compute the tltre contribution for each posterior sample
posterior_contr <- list()
for ( i in 1:n_draws ) {
posterior_contr[[i]] <-
get_tltre_contribution(s0 = posterior_list$s0[i,],
sN = posterior_list$sN[i,],
sB = posterior_list$sB[i,],
sW = posterior_list$sW[i,],
In = posterior_list$In[i,],
Tot = posterior_list$Tot[i,],
pNb = posterior_list$pNb[i,],
pPb = posterior_list$pPb[i,])$contribution
}
# as a matrix
posterior_contr_mat <- posterior_contr %>%
do.call(rbind,.)
summary_contributions <- tibble(par = colnames(posterior_contr_mat))
for (p in c(.05, .5, .95)){
name <- str_c("p",p*100)
summary_contributions[[name]] <- apply(posterior_contr_mat,2,function(x){quantile(x,p)})
}
file
View(summary_contributions)
# save
pop_hmm <- str_split(file, "_fit.RDS")[[1]][1]
pop_hmm <- str_split(file, "_fit.RDS")[[1]][1]
out_file <- str_c("outputs/tltre_contributions_", pop_hmm, ".RDS")
out_file
